plotts.sample.wge(x3,lag.max=48)
x3=gen.aruma.wge(n=180, phi=c(1,-.6),s=12,theta=-.5, sn=6)
plotts.sample.wge(x3,lag.max=48)
x4=gen.aruma.wge(n=180, phi=c(0.6,-0.94),s=6,theta=-0.3, sn=6)
x4=gen.aruma.wge(n=180, phi=c(0.6,-0.94),s=6,theta=-0.3, sn=19)
x4=gen.aruma.wge(n=200, phi=c(0.6,-0.94),s=6,theta=-0.3, sn=19)
x=gen.aruma.wge(n=80, s=4, sn = 81)
Dif = artrans.wge(x,c(0,0,0,1))
aic5.wge(Dif)
x=gen.aruma.wge(n=80, phi = c(.4,.6,-.74), theta = c(-.7), s=12, sn = 31)
Dif = artrans.wge(x,c(rep(0,11),1))
aic5.wge(Dif)
x=gen.aruma.wge(n=80, phi = c(.4,.6,-.74), theta = c(-.7), s=12, sn = 31)
Dif = artrans.wge(x,c(rep(0,11),1))
x5=gen.aruma.wge(n=500, phi=c(0.6,-0.80),s=12,theta=c(-0.3,-0.7), sn=37)
Dif5 = artrans.wge(x5,c(rep(0,11),1))
aic5.wge(Dif5) #Check the structure of the noise
factor.wge(phi = c(0,0,0,1))
plotts.true.wge(phi = c(0,0,0,1))
factor.wge(phi = c(rep(0,11),1))
factor.wge(phi = c(-0.2,0.4,0.49,rep(0,8),1,0.2,-0.4,0.49))
factor(c(rep(0,4),1))#Factor Table (1-B^5)
factor.wge(c(0,0,0,1))
factor.wge(phi = c(-0.2,0.4,0.49,rep(0,8),1,0.2,-0.4,0.49))
factor.wge(phi = c(-0.2,0.4,0.49,rep(0,8),1,0.2,-0.4,-0.49))
factor.wge(c(0,0,0,0,0,0,0,0,0,0,0,1))
factor.wge(phi = c(-0.3,0.8,0,0,1,0.3,-0.8))
factor.wge(c(rep(0,4),1))#Factor Table (1-B^5)
factor.wge(c(-0.5,0.2,0,-1,0.5,-0.2))
factor.wge(c(0,0,0,1))
factor.wge(c(-0.5,0.2,0,1,0.5,-0.2))
factor.wge(c(-0.3,1.2,0.4,0,0.5,0,0,0,0,0,0,-1,0.3,-1.2,-0.4))
data(airlog)
plotts.wge(airlog)
plotts.sample.wge(airlog)
SA1 = artrans.wge(airlog,1)
plotts.sample.wge(SA1)
SA12 = artrans.wge(airlog,c(rep(0,11),1))# take the 12th difference of the data (1-B12)
SA1_12 = artrans.wge(SA1,c(rep(0,11),1)) # take the 12th difference of the first difference (1-B)(1-B12)
Parzen = aic.wge(SA12, p = 13)
Box = aic.wge(SA1_12, q = 13)
WoodwardAndGray = aic.wge(SA1_12, p = 12)
Parzen$value
Box$value
WoodwardAndGray$value
install.packages("quantmod")
library("quantmod")
getSymbols("DFII10", src="FRED")
View(DFII10)
getSymbols(c('AAPL','WFT')
)
View(AAPL)
?getSymbols()
View(WFT)
WFT_2018 = WFT['2018-01-01'/'2018-12-31']
WFT_2018 = WFT['2018-01-01/2018-12-31']
View(WFT_2018)
WFT_2018 = WFT$WFT.Adjusted['2018-01-01/2018-12-31']
View(WFT_2018)
library(tswge)
plotts.wge(WFT_2018$WFT.Adjusted)
plotts.wge(WFT_2018)
plotts.wge(WFT_2018)
firstDif = artrans.wge(WFT_2018, 1) #Take out the (1-B)
par(mfrow=c(1,1))
parzen.wge(firstDif)
aic5.wge(firstDif)
aic5.wge(WFT_2018)
getSymbols(c('BRK-A'))
getSymbols(c('BRKA'))
getSymbols(c('BRK_A'))
getSymbols(c('BRKA'))
getSymbols(c('DATA')) #Tableau
DATA_2018 = DATA$DATA.Adjusted['2018-01-01/2018-12-31']
plotts.wge(DATA_2018)
View(DATA)
firstDif = artrans.wge(DATA_2018, c(1)) #Take out the (1-B)
parzen.wge(firstDif)
par(mfrow=c(1,1))
parzen.wge(firstDif)
aic5.wge(firstDif)
factor.wge(c(0,0,0,0,0,0,1))#Factor Table (1-B^7)
x2 = gen.arima.wge(500,phi=c(0.6,-0.8),var = 1, d=2,sn=37)
acf5 = acf(x2)
x2 = gen.arima.wge(500,phi=c(0.6,-0.8),theta=c(-0.3),var = 1, d=2,sn=37)
acf5 = acf(x2)
parzen.wge(x2)
x3 = gen.arima.wge(500,phi=c(0.6,-0.8),theta = c(-0.3),var = 1, d=2,sn=35)
firstDif = artrans.wge(x3, 1) #Take out the (1-B)
SecondDif = artrans.wge(firstDif, 1) #Take out another (1-B)
par(mfrow=c(1,1))
aic5.wge(SecondDif)
# Concept Checks 6.6.6
# (1 + 0.5B - 0.2B^2 + 1B^4 - 0.5B^5 + 0.2B^6)X_t = (1-0.92B)a_t
factor.wge(c(-0.5,0.2,0,-1,0.5,-0.2))
# Concept Checks 6.6.6
# (1 + 0.5B - 0.2B^2 - 1B^4 - 0.5B^5 + 0.2B^6)X_t = (1-0.92B)a_t
factor.wge(c(-0.5,0.2,0,1,0.5,-0.2))
factor.wge(c(0,0.0,1))
factor.wge(c(0,0.0,0,1))
factor.wge(c(0,0,0,1))
factor.wge(c(.76,0,0,.94,-.75))
x5=gen.arima.wge(n=500, phi=c(0.76,0,0,0.94,-.75))
x5=gen.arma.wge(n=500, phi=c(0.76,0,0,0.94,-.75))
plotts.sample.wge(x5)
factor.wge(c(0.76,0,0,0.94,-.75))
factor.wge(c(0,0,0,1))
ll_99 = (C_fore$f-c_fore$ll)*(z/1.96)
library(tswge)
# https://cran.r-project.org/web/packages/tswge/tswge.pdf
data("fig6.2nf")
F62 = fig6.2nf
p = 2 #order of ARMA model
c_fore = fore.aruma.wge(F62, d = 0, s = 0, phi = c(1.2,-0.6),theta = c(0.5),
n.ahead = 20,lastn = FALSE, limits = FALSE)
sigma_aHat = sqrt((sum((c_fore$resid)^2))/(length(F62)-p))
print(paste0('sigma_aHat =',sigma_aHat))
z = 2.58
ll_99 = (C_fore$f-c_fore$ll)*(z/1.96)
c_fore = fore.aruma.wge(F62, d = 0, s = 0, phi = c(1.2,-0.6),theta = c(0.5),
n.ahead = 20,lastn = FALSE, limits = FALSE)
c_fore
z = 2.58
ll_99 = (c_fore$f-c_fore$ll)*(z/1.96)
ll_99
c_fore$ll_99 = c_fore$f-abs((c_fore$f-c_fore$ll)*(z/1.96))
z = 2.58
half_width = abs((c_fore$f-c_fore$ll)*(z/1.96))
c_fore$ll_99 = c_fore$f-half_width
c_fore$ul_99 = c_fore$f+half_width
z = 2.58 # Z for 99%
x_6.2 = fore.aruma.wge(fig6.2nf, d = 0, s = 0, phi = c(1.2,-0.6),theta = c(0.5),
n.ahead = 20,lastn = FALSE, limits = FALSE)
half_width = abs((x_6.2$f-x_6.2$ll)*(z/1.96))
x_6.2$ll_99 = x_6.2$f-half_width # Will add the new ul & ll to original data set
x_6.2$ul_99 = x_6.2$f+half_width
View(x_6.2)
View(x_6.2)
View(c_fore)
View(c_fore)
fig6.2nf
plot(fig6.2nf,y1,type="l",col="red")
plot(fig6.2nf,type="l",col="red")
R.Version()
?tswge()
?tswge
?`tswge-package`
ts <- c(76,70,66,60,70,72,76,80)
mean(ts)
n = length(ts)
gamma0 = var(ts)*((n-1)/n)
gamma0
rhos <- acf(ts,plot = FALSE,lag.max = n-1)
ts <- c(76,70,66,60,70,72,76,80)
mean(ts)
n = length(ts)
gamma0 = var(ts)*((n-1)/n)
gamma0
# [1] 34.9375
rhos <- acf(ts,plot = FALSE,lag.max = n-1)
rhos
# Autocorrelations of series 'ts', by lag
#
# 0      1      2      3      4      5      6      7
# 1.000  0.422 -0.043 -0.430 -0.466 -0.173  0.042  0.149
rhos
gamma_hat[]
length(ts)
for (i in length(ts)){
gamma_hat[k] = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))/length(ts)
print(paste("The year is", i))
}
k=1
gamma_hat[]
for (i in length(ts)){
gamma_hat[k] = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))/length(ts)
print(paste("The year is", i))
}
k=1
gamma_hat()
for (i in length(ts)){
gamma_hat[k] = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))/length(ts)
print(paste("The year is", i))
}
for (i in length(ts)){
gamma_hat[k] = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))/length(ts)
print(paste("The year is", i))
}
for (i in length(ts)){
gamma_hat = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))/length(ts)
print(paste("The year is", i))
}
gamma_hat
ts[i]
mean(ts)
(ts[i]-mean(ts))^2
ts[i]-mean(ts)
(length(ts)-1)
(length(ts)-k)
k=1
gamma_hat()
for (i in (length(ts)-k)){
gamma_hat = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))/length(ts)
print(gamma_hat)
}
k=1
gamma_hat()
for (i in (length(ts)-k)){
gamma_hat[i] = (((ts[i]-mean(ts))^2)*((ts[i+k]-mean(ts))^2))
print(gamma_hat[i])
}
k=1
gamma_hat()
for (i in (length(ts)-k)){
gamma_hat[i] = ((ts[i]-mean(ts))^2)
print(gamma_hat[i])
}
k=1
gamma_hat()
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))^2)
print(gamma_hat[i])
}
k=1
gamma_hat()
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
gamma_hat2()
gamma_hat2[]
gamma_hat2[1] = sum(gamma_hat)/length(ts)
gamma_hat2 = sum(gamma_hat)/length(ts)
k=1
gamma_hat()
for (k in seq(3)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat2
k=1
gamma_hat()
for (k in seq(7)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat2
k=1
gamma_hat()
for (k in seq(n)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
k=1
gamma_hat()
for (k in seq(9)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
max_lag =n-1
gamma_hat2
plotts.sample.wge(ts)
library(tswge)
plotts.sample.wge(ts)
ts <- c(76,70,66,60,70,72,76,80)
mean(ts)
n = length(ts)
gamma0 = var(ts)*((n-1)/n)
gamma0
max_lag
max_lag =n-1
max_lag =n-1
#gamma_hat()
for (k in seq(max_lag)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
max_lag
for (k in seq(max_lag)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat <- rep(0, max_lag)
gamma_hat
for (k in seq(max_lag)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat2 <- rep(0, max_lag)
for (k in seq(max_lag)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
#print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat2
for (k in seq(2)){
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat
for (k in seq(2)){
gamma_hat <- rep(0, max_lag)
for (i in seq((length(ts)-k))){
gamma_hat[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(gamma_hat[i])
}
gamma_hat2[k] = sum(gamma_hat)/length(ts)
}
gamma_hat2
max_lag =n-1
gamma_hat <- rep(0, max_lag)
for (k in seq(2)){
temp <- rep(0, max_lag)
for (i in seq((length(ts)-k))){
temp[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(temp[i])
}
gamma_hat[k] = sum(temp)/length(ts)
}
gamma_hat
max_lag =n-1
gamma_hat <- rep(0, max_lag)
for (k in seq(max_lag)){
temp <- rep(0, max_lag)
for (i in seq((length(ts)-k))){
temp[i] = ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(temp[i])
}
gamma_hat[k] = sum(temp)/length(ts)
}
gamma_hat
ts <- c(76,70,66,60,70,72,76,80)
mean(ts)
n = length(ts)
gamma0 = var(ts)*((n-1)/n)
gamma0
nlag=n-1
gamma_hat <- rep(0, nlag)
for (k in 1:seq(nlag)){
sum = 0
for (i in seq((length(ts)-k))){
sum = sum + ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(sum)
}
gamma_hat[k] = sum/length(ts)
}
gamma_hat
n = length(ts)
nlag=n-1
gamma_hat <- rep(0, nlag)
for (k in 1:seq(nlag)){
sum = 0
for (i in seq((length(ts)-k))){
sum = sum + ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(sum)
}
gamma_hat[k] = sum/length(ts)
}
nlag=n-1
gamma_hat <- rep(0, nlag)
for (k in seq(nlag)){
sum = 0
for (i in seq((length(ts)-k))){
sum = sum + ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(sum)
}
gamma_hat[k] = sum/length(ts)
}
gamma_hat
library(tswge)
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
data('hadley')
plotts.wge(hadley)
?fore.aruma.wge()
fore.aruma.wge(n=100,phi = c(.5),theta = c(),d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
?gen.aruma.wge()
x = gen.aruma.wge(n=100,phi = c(.5),,theta = c(),d=0,s=0,vara = 1,sn=0)
fore.aruma.wge(phi = c(.5),theta = c(),d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
x = gen.aruma.wge(n=100,phi = c(.5),theta = c(),d=0,s=0,vara = 1,sn=0)
x = gen.aruma.wge(n=100,phi = c(.5),theta = 0,d=0,s=0,vara = 1,sn=0)
fore.aruma.wge(phi = c(.5),theta = c(),d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
fore.aruma.wge(x,phi = c(.5),theta = c(),d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
fore.aruma.wge(x,phi = c(.5),theta = 0,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
x = gen.aruma.wge(n=100,phi = 0,theta = .5,d=0,s=0,vara = 1,sn=0)
fore.aruma.wge(x,phi = 0,theta = 0.5,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
x = gen.aruma.wge(n=100,phi = c(.5,.3),theta = 0,d=0,s=0,vara = 1,sn=0)
fore.aruma.wge(x,phi = c(.5,.3),theta = 0,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
x = gen.aruma.wge(n=100,phi = c(.5,.8),theta = 0,d=0,s=0,vara = 1,sn=0)
x = gen.aruma.wge(n=100,phi = c(.5,.6),theta = 0,d=0,s=0,vara = 1,sn=0)
x
fore.aruma.wge(x,phi = c(.5,.3),theta = 0,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
x = gen.aruma.wge(n=100,phi = c(.5,.4),theta = 0,d=0,s=0,vara = 1,sn=0)
?gen.aruma.wge()
x = gen.aruma.wge(n=100,phi = c(.5,.4),theta = 0,d=0,s=0,vara = 1,sn=0)
x = gen.aruma.wge(n=100,phi = c(.5,.4),theta = 0,d=0,s=0,vara = 1,sn=0)
fore.aruma.wge(x,phi = c(.5,.3),theta = 0,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
ts <- c(6,8,13,12,10,7,4,2,1)
mean(ts)
gamma0 = var(ts)*((n-1)/n)
gamma0
n = length(ts)
gamma0 = var(ts)*((n-1)/n)
gamma0
# Calculating gamma_hat(x)
nlag=n-1
gamma_hat <- rep(0, nlag)
for (k in seq(nlag)){
sum = 0
for (i in seq((length(ts)-k))){
sum = sum + ((ts[i]-mean(ts))*(ts[i+k]-mean(ts)))
print(sum)
}
gamma_hat[k] = sum/length(ts)
}
gamma_hat
rhos <- acf(ts,plot = FALSE,lag.max = n-1)
rhos
print(rhos$acf[3]) #[1] 1
mean(ts) #[1] 7
factor.wge(phi = c(0.6,-0.4))
fore.aruma.wge(ts,phi = c(0.6,-0.4),theta = 0,d=0,s=0,
n.ahead = 1,lastn = FALSE,limits = FALSE)
fore.aruma.wge(ts,phi = c(0.6,-0.4),theta = 0,d=0,s=0,
n.ahead = 5,lastn = FALSE,limits = FALSE)
psi.weights.wge(phi = c(0.6,-0.4) )
psi.weights.wge(phi = c(0.6,-0.4),lag.max = 3 )
fore.aruma.wge(ts,phi = c(0.6,-0.4),theta = 0,d=0,s=0,
n.ahead = 4,lastn = FALSE,limits = TRUE)
P9 = fore.aruma.wge(ts,phi = c(0.6,-0.4),theta = 0,d=0,s=0,
n.ahead = 4,lastn = FALSE,limits = TRUE)
P9
x = gen.aruma.wge(n=100,phi = c(.5),theta = 0,d=0,s=0,vara = 1,sn=0)
plotts.sample.wge(phi = c(.5))
?plotts.sample.wge()
plotts.true.wge(phi = c(.5))
plotts.true.wge(phi = c(.95)
plotts.true.wge(phi = c(.25)
plotts.true.wge(phi = c(.25))
plotts.true.wge(phi = c(.99))
x = gen.aruma.wge(n=100,phi = c(.5,.4),theta = 0,d=0,s=0,vara = 1,sn=0)
fore.aruma.wge(x,phi = c(.5),theta = 0,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
fore.aruma.wge(x,phi = c(-.5),theta = 0,d=0,s=0,
n.ahead = 10,lastn = FALSE,limits = FALSE)
gen.aruma.wge(n=100,phi = c(.9),theta = 0,d=0,s=0,vara = 1,sn=0)
gen.aruma.wge(n=100,phi = c(.9),theta = 0,d=0,s=0,vara = 1,sn=0)
gen.aruma.wge(n=100,phi = c(.9),theta = 0,d=0,s=0,vara = 1,sn=0)
gen.aruma.wge(n=100,phi = c(-.9),theta = 0,d=0,s=0,vara = 1,sn=0)
gen.aruma.wge(n=100,phi = c(-.9),theta = 0,d=0,s=0,vara = 1,sn=0)
?factor.wge()
?factor.wge(phi = 0.9)
factor.wge(phi = 0.9)
factor.wge(phi = (0.9,-.4)
factor.wge(phi = (0.9,-.4)
factor.wge(phi = c(0.9,-.4))
factor.wge(-.17,-2.75)
factor.wge(phi= c(-.17,-2.75))
plotts.true.wge(theta = c(2.25,2.41))
plotts.true.wge(-.17,-2.75)
plotts.true.wge(theta = c(-.17,-2.75))
factor.wge(phi= c(-.17,-2.75))
plotts.true.wge(theta = c(-0.0309,-.3636))
factor.wge(phi= c(-.17,-2.75))
plotts.true.wge(theta = c(-.17,-2.75))
plotts.true.wge(theta = c(-0.0309,-.3636))
factor.wge(phi= c(-.17,-2.75))
plotts.true.wge(theta = c(-0.0618,-.3636))
P9 = fore.aruma.wge(ts,phi = c(0.6,-0.4),theta = 0,d=0,s=0,
n.ahead = 4,lastn = FALSE,limits = TRUE)
P9
data("global.temp")
gt = global.temp[100:length(global.temp)]
x29 = gen.sigplusnoise.wge(gt)
?gen.sigplusnoise.wge()
