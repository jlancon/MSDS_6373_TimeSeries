x = gen.sigplusnoise.wge(n=100,coef=c(3,1.5),freq=c(0.05,0.35),psi=c(0,2))
plotts.sample.wge(x)
library(tswge)
# https://cran.r-project.org/web/packages/tswge/tswge.pdf
# Setting the current working directory to the current file location
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
# Realization from 1.6
# X_t = 3cos(2*pi*(0.05)t + 0) + 1.5cos(2*pi*(0.35)t + 2) + a_t
x = gen.sigplusnoise.wge(n=100,coef=c(3,1.5),freq=c(0.05,0.35),psi=c(0,2))
plotts.sample.wge(x)
?butterworth.wge()
butterworth.wge(x,order=3,type='low',cutoff = 0.2)
x_low = butterworth.wge(x,order=3,type='low',cutoff = 0.2)
x_high =butterworth.wge(x,order=3,type='high',cutoff = 0.2)
x_high_low = butterworth.wge(x_high,order=3,type='low',cutoff = 0.2)
x_high
x_high_low = butterworth.wge(x_high$x.filt,order=3,type='low',cutoff = 0.2)
acf(x_low)
acf(x_low$x.filt)
acf(x_low$x.filt)
dev.off()
acf(x_low$x.filt)
acf(x_high$x.filt)
dev.off()
acf(x_high_low$x.filt)
x_low = butterworth.wge(x,order=3,type='low',cutoff = 0.2)
dev.off()
acf(x_low$x.filt)
x_high =butterworth.wge(x,order=10,type='high',cutoff = 0.2)
dev.off()
acf(x_high$x.filt)
x_high_low = butterworth.wge(x_high$x.filt,order=10,type='low',cutoff = 0.2)
dev.off()
acf(x_high_low$x.filt)
x_high_low = butterworth.wge(x_high$x.filt,order=10,type='low',cutoff = 0.2)
x_high_low
x_high_low = butterworth.wge(x_high$x.filt,order=3,type='low',cutoff = 0.2)
x_high_low
x_high_low = butterworth.wge(x_high$x.filt,order=1,type='low',cutoff = 0.2)
x_high_low
dif_1=diff(x,lag=1)
dif_1
plot(dif_1,type='l',ylim=c(-7, 7))
dev.off()
plot(dif_1,type='l',ylim=c(-7, 7)
)
acf(diff_1)
acf(dif_1)
dif_1
parzen.wge(dif[!is.na(dif)])
parzen.wge(dif_1[!is.na(dif_1)])
plotts.sample.wge(dif_1)
plotts.sample.wge(x_low$x.filt)
plotts.sample.wge(x_high$x.filt)
plotts.sample.wge(x_high_low$x.filt)
plotts.sample.wge(x_low$x.filt)
plotts.sample.wge(x_high$x.filt)
plotts.sample.wge(x_high_low$x.filt)
x_high_low = butterworth.wge(x_high$x.filt,order=3,type='low',cutoff = 0.2)
x_high =butterworth.wge(x,order=3,type='high',cutoff = 0.2)
x_high_low = butterworth.wge(x_high$x.filt,order=3,type='low',cutoff = 0.2)
plotts.sample.wge(x_high_low$x.filt)
ma_5=filter(x,rep(1,5))/5
?filter()
?filter()
x <- 1:100
x
filter(x, rep(1, 3))
filter(x, rep(1, 3)/3)
ma_5=filter(x,rep(1,5))/5
ma_5
ma_51=filter(x,rep(1,5)/5)
ma_51
ma_5=filter(x,rep(1,5)/5)
x = gen.sigplusnoise.wge(n=100,coef=c(3,1.5),freq=c(0.05,0.35),psi=c(0,2))
ma_5=filter(x,rep(1,5)/5)
ma_5
plot(ma_5, type='l', ylim=c(-6,6))
plotts.sample.wge(ma_5[!is.na(ma_5)])
x3=gen.aruma.wge(n=50,phi=.8,d=3,sn=15)
x3=gen.aruma.wge(n=50,phi=.8,d=3,sn=205)
x3=gen.aruma.wge(n=50,phi=.8,d=3,sn=205)
x3=gen.aruma.wge(n=50,phi=c(.5,-.8),d=3,sn=205)
x3=gen.aruma.wge(n=50,phi=c(.5,-.8),d=3)
x3=gen.aruma.wge(n=50,phi=c(.5,-.8),d=3)
x3=gen.aruma.wge(n=50,phi=c(.2,-.4),d=3)
x3=gen.aruma.wge(n=50,phi=c(.2,-.4),d=3)
x3=gen.aruma.wge(n=50,phi=c(.2,-.4),d=3)
x3=gen.aruma.wge(n=50,phi=c(.1,-.1),d=3)
x3=gen.aruma.wge(n=50,phi=c(.1,-.1),d=1)
x3=gen.aruma.wge(n=50,phi=c(.1,-.1),d=2)
x3=gen.aruma.wge(n=50,phi=c(.1,-.1),d=1)
x3=gen.aruma.wge(n=50,phi=c(.1,-.1),d=1, sn=25)
fore.aruma.wge(x,phi=c(.1,-.1),d=3,n.ahead=10 , limits = FALSE)
fore.aruma.wge(x,phi=c(.1,-.1),d=3,n.ahead=5 , limits = FALSE)
fore.aruma.wge(x,phi=c(.1,-.1),d=2,n.ahead=5 , limits = FALSE)
fore.aruma.wge(x,phi=c(.1,-.1),d=4,n.ahead=5 , limits = FALSE)
?plotts.true.wge()
x_.9 = plotts.true.wge(n=200, phi=0.9)
x_N.9 = plotts.true.wge(n=200, phi=-0.9)
# Generate Realization/ACF/SPectral Density of phi = 0.9
x_.5 = plotts.true.wge(n=200, phi=0.5)
# Generate Realization/ACF/SPectral Density of phi = -0.9
x_N.5 = plotts.true.wge(n=200, phi=-0.5)
x_N.5
# Generate Realization/ACF/SPectral Density of phi = 0.9 var=10
x_.9 = plotts.true.wge(n=200, phi=0.9,vara = 10)
# Generate Realization/ACF/SPectral Density of phi = -0.9 var=10
x_N.9 = plotts.true.wge(n=200, phi=-0.9,vara = 10)
# Generate Realization/ACF/SPectral Density of phi = 0.9 var=10
x_.5 = plotts.true.wge(n=200, phi=0.5, vara = 10)
# Generate Realization/ACF/SPectral Density of phi = -0.9 var=10
x_N.5 = plotts.true.wge(n=200, phi=-0.5, vara = 10)
x_.9 = plotts.true.wge(n=200, phi=0.9)
x_.9 = plotts.true.wge(n=200, phi=0.9)
x_.9 = plotts.true.wge(n=200, phi=0.9)
x_.9Gen = gen.arma.wge(n=200, phi=0.9,vara = 10, sn=1)
x_.5V10_Gen = gen.arma.wge(n=200, phi=0.5,vara = 10, sn=1)
x_N.5V10_Gen = gen.arma.wge(n=200, phi=-0.5,vara = 10, sn=1)
